name: Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

env:
  GO_VERSION: '1.24.5'

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Get dependencies
        run: go mod download

      - name: Run tests
        run: go test ./...

      - name: Build for multiple platforms
        run: |
          mkdir -p dist
          
          # Build for Linux
          GOOS=linux GOARCH=amd64 go build -ldflags="-s -w" -o dist/gns3util-linux-amd64 .
          GOOS=linux GOARCH=arm64 go build -ldflags="-s -w" -o dist/gns3util-linux-arm64 .
          
          # Build for macOS
          GOOS=darwin GOARCH=amd64 go build -ldflags="-s -w" -o dist/gns3util-darwin-amd64 .
          GOOS=darwin GOARCH=arm64 go build -ldflags="-s -w" -o dist/gns3util-darwin-arm64 .
          
          # Build for Windows
          GOOS=windows GOARCH=amd64 go build -ldflags="-s -w" -o dist/gns3util-windows-amd64.exe .
          GOOS=windows GOARCH=arm64 go build -ldflags="-s -w" -o dist/gns3util-windows-arm64.exe .
          
          # Create compressed archives
          cd dist
          for file in gns3util-*; do
            if [[ "$file" == *".exe" ]]; then
              tar -czf "${file}.tar.gz" "$file" ../README.md ../LICENSE 2>/dev/null || tar -czf "${file}.tar.gz" "$file"
            else
              tar -czf "${file}.tar.gz" "$file" ../README.md ../LICENSE 2>/dev/null || tar -czf "${file}.tar.gz" "$file"
            fi
          done

      - name: Generate checksums
        run: |
          cd dist
          for file in *.tar.gz; do
            sha256sum "$file" > "${file}.sha256"
          done

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            dist/*.tar.gz
            dist/*.sha256
          generate_release_notes: true
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
